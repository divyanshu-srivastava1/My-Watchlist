{"version":3,"sources":["actions/index.js","components/Navbar.js","components/MovieCard.js","components/App.js","reducers/index.js","index.js"],"names":["ADD_MOVIES","ADD_FAVOURITE","REMOVE_FAVOURITE","SET_SHOW_FAVOURITE","ADD_SEARCH_RESULT","ADD_TO_MOVIES","CLEAR_SEARCH","ADD_LOCAL_STORAGE","addFavourite","movie","type","removeFavourite","setShowFavourite","val","handleSearch","key","url","dispatch","fetch","then","response","json","movies","addSearchResult","Navbar","handleChange","e","setState","searchString","target","value","props","store","state","handleAddtoMovies","getState","result","handleEnter","code","console","log","this","showResult","className","onChange","onKeyDown","onClick","src","Poster","alt","Title","React","Component","MovieCard","handleFavourite","localStorage","setItem","JSON","stringify","handleUnfavourite","isFavourite","style","fontWeight","fontStyle","Year","Plot","imdbRating","App","favourites","indexOf","handleChangeTab","subscribe","forceUpdate","parse","getItem","list","showFavourite","displayMovies","map","id","length","initialMoviesState","initialSearchState","combineReducers","action","splice","ck","forEach","obj","push","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb872909.chunk.js","sourcesContent":["//Action types\r\nexport const ADD_MOVIES = 'ADD_MOVIES'\r\nexport const ADD_FAVOURITE = 'ADD_FAVOURITE'\r\nexport const REMOVE_FAVOURITE = 'REMOVE_FAVOURITE'\r\nexport const SET_SHOW_FAVOURITE = 'SET_SHOW_FAVOURITE'\r\nexport const ADD_SEARCH_RESULT = 'ADD_SEARCH_RESULT'\r\nexport const ADD_TO_MOVIES = 'ADD_TO_MOVIES'\r\nexport const CLEAR_SEARCH = 'CLEAR_SEARCH'\r\nexport const ADD_LOCAL_STORAGE = 'ADD_LOCAL_STORAGE'\r\n\r\n//Action creators\r\nexport default function addMovies(movies){\r\n    return {\r\n        type: ADD_MOVIES,\r\n        movies\r\n    }\r\n}\r\n\r\nexport function addFavourite(movie){\r\n    return {\r\n        type: ADD_FAVOURITE,\r\n        movie\r\n    }\r\n}\r\n\r\nexport function removeFavourite(movie){\r\n    return {\r\n        type: REMOVE_FAVOURITE,\r\n        movie\r\n    }\r\n}\r\n\r\nexport function setShowFavourite(val){\r\n    return {\r\n        type: SET_SHOW_FAVOURITE,\r\n        val\r\n    }\r\n}\r\n\r\nexport function handleSearch(key){\r\n    const url = `https://www.omdbapi.com/?apikey=1e7d10fb&t=${key}`\r\n    \r\n    return function(dispatch){\r\n        fetch(url)\r\n        .then(response=>response.json())\r\n        .then(movies=>{\r\n            dispatch(addSearchResult(movies))\r\n        })\r\n    }\r\n}\r\n\r\nexport function addSearchResult(movies){\r\n    return {\r\n        type: ADD_SEARCH_RESULT,\r\n        movies\r\n    }\r\n}\r\n\r\nexport function AddtoMovies(movie){\r\n    return {\r\n        type: ADD_TO_MOVIES,\r\n        movie\r\n    }\r\n}\r\n\r\nexport function clearSearch(){\r\n    return {\r\n        type: CLEAR_SEARCH,\r\n    }\r\n}\r\n\r\nexport function addLocalStorage(){\r\n    return {\r\n        type: ADD_LOCAL_STORAGE,\r\n    }\r\n}","import React from \"react\";\r\nimport { handleSearch, AddtoMovies, clearSearch } from \"../actions\";\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            searchString: '',\r\n        }\r\n    }\r\n    handleChange=(e)=>{\r\n        //console.log(e.target.value)\r\n        this.setState({\r\n            searchString: e.target.value\r\n        })\r\n    }\r\n    handleSearch=()=>{\r\n        this.props.store.dispatch(handleSearch(this.state.searchString))\r\n    }\r\n    handleAddtoMovies=()=>{\r\n        this.props.store.dispatch(AddtoMovies(this.props.store.getState().addSearchResult.result))\r\n        this.props.store.dispatch(clearSearch())\r\n    }\r\n    handleEnter=(e)=>{\r\n        //console.log(e);\r\n        if(e.code===\"Enter\"){\r\n            console.log(e.code)\r\n            this.handleSearch()\r\n        }\r\n    }\r\n    render() {\r\n        const { result, showResult } = this.props.store.getState().addSearchResult;\r\n        //console.log(result)\r\n        return (\r\n            <div className=\"nav\">\r\n                <div className='search-container'>\r\n                    <input onChange={this.handleChange} onKeyDown={this.handleEnter}/>\r\n                    <button className='search-btn' onClick={this.handleSearch}>Search</button>\r\n                </div>\r\n                {\r\n                showResult &&\r\n                <div className='search-results'>\r\n                    <div className='search-result'>\r\n                        <img src={result.Poster} alt='search-pic' />\r\n                        <div className='movie-info'>\r\n                            <span>{result.Title}</span>\r\n                            <button onClick={this.handleAddtoMovies}>Add to movies</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { addFavourite, removeFavourite } from \"../actions\";\r\n\r\nclass MovieCard extends React.Component {\r\n    handleFavourite=(movie)=>{\r\n        const {dispatch} = this.props\r\n        dispatch(addFavourite(movie))\r\n        localStorage.setItem('state', JSON.stringify(this.props.store.getState().movies))\r\n        //console.log(this.props.store.getState())\r\n    }\r\n    handleUnfavourite=(movie)=>{\r\n        const {dispatch} = this.props\r\n        dispatch(removeFavourite(movie))\r\n        localStorage.setItem('state', JSON.stringify(this.props.store.getState().movies))\r\n        //console.log(this.props.store.getState())\r\n    }\r\n    render() {\r\n        const {movie, isFavourite} = this.props;\r\n        return (\r\n            <div className=\"movie-card\">\r\n                <div className='left'>\r\n                    <img alt='movie-poster' src={movie.Poster}/>\r\n                </div>\r\n                <div className='right'>\r\n                    <div className='title'>{movie.Title} <span style={{fontWeight: 'normal', fontStyle: 'italic'}}>({movie.Year})</span></div>\r\n                    <div className='plot'>{movie.Plot}</div>\r\n                    <div className='footer'>\r\n                        <div className='rating'>{movie.imdbRating}</div>\r\n                        {\r\n                            isFavourite\r\n                            ? <button className='unfavourite-btn' onClick={()=>this.handleUnfavourite(movie)}>Unfavourite</button>\r\n                            : <button className='favourite-btn' onClick={()=>this.handleFavourite(movie)}>Favourite</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieCard;\r\n","import React, { useCallback } from \"react\";\nimport {data} from '../data'\nimport Navbar from './Navbar'\nimport MovieCard from './MovieCard'\nimport addMovies from '../actions'\nimport {setShowFavourite, addFavourite, addLocalStorage} from '../actions'\nvar first_time=1;\nclass App extends React.Component{\n  componentDidMount(){\n    //make api call\n    //dispath action\n\n    this.props.store.subscribe(()=>{\n      console.log('UPDATED')\n      //localStorage.setItem('state', JSON.stringify(this.props.store.getState().movies))\n      //console.log(localStorage.state);\n      this.forceUpdate()\n    })\n    if(JSON.parse(localStorage.getItem('state')) !== null){\n      this.props.store.dispatch(addLocalStorage())\n      // this.props.store.dispatch(addMovies(JSON.parse(localStorage.getItem('state')).list))\n      // JSON.parse(localStorage.getItem('state')).favourites.forEach(ele => {\n      //   this.props.store.dispatch(addFavourite(ele))\n      // });\n    }\n    // this.props.store.dispatch(addMovies(data))\n    //console.log(this.props.store.getState());\n  }\n  isFavourite=(movie)=>{\n    const {favourites} = this.props.store.getState().movies\n    const id = favourites.indexOf(movie)\n    if(id!=-1){\n      return true\n    }\n    return false\n  }\n  handleChangeTab=(val)=>{\n    this.props.store.dispatch(setShowFavourite(val))\n    //console.log(this.props.store.getState());\n  }\n  render(){\n    const { list, favourites, showFavourite } = this.props.store.getState().movies;  //{list, favourite}\n    const displayMovies = showFavourite ? favourites : list\n    return (\n      <div className=\"movie-app\">\n        <Navbar store={this.props.store}/>\n        <div className='main'>\n          <div className='tabs'>\n            <div className= {`tab ${showFavourite ? '' : 'active-tabs'}`} onClick={()=>this.handleChangeTab(false)}>Movies</div>\n            <div className= {`tab ${showFavourite ? 'active-tabs' : ''}`} onClick={()=>this.handleChangeTab(true)}>Favourites</div>\n          </div>\n          <div className='list'>\n          {displayMovies.map((movie, id)=>(\n              <MovieCard \n                movie={movie} \n                key={id} \n                dispatch={this.props.store.dispatch} \n                isFavourite={this.isFavourite(movie)}\n                store={this.props.store}  \n              />\n            ))}\n          </div>\n          {displayMovies.length===0 ? <div className='no-movies'>No Movies to display !!</div> : \"\"}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\n\r\nimport { ADD_MOVIES, ADD_FAVOURITE, REMOVE_FAVOURITE, SET_SHOW_FAVOURITE, ADD_SEARCH_RESULT, ADD_TO_MOVIES, CLEAR_SEARCH, ADD_LOCAL_STORAGE } from \"../actions\";\r\nconst initialMoviesState = {\r\n    list: [],\r\n    favourites: [],\r\n    showFavourite: false\r\n}\r\nexport function movies (state = initialMoviesState, action){\r\n    // if(action.type==ADD_MOVIES){\r\n    //     return {...state, list: action.movies}\r\n    // }\r\n    // return state;\r\n    switch(action.type){\r\n        case ADD_MOVIES:\r\n            state = {...state, list: action.movies}\r\n            return state;\r\n        case ADD_FAVOURITE:\r\n            return { ...state, favourites: [action.movie, ...state.favourites]};\r\n        case REMOVE_FAVOURITE:\r\n            const id = state.favourites.indexOf(action.movie)\r\n            state.favourites.splice(id, 1)\r\n            return state;\r\n        case SET_SHOW_FAVOURITE:\r\n            state.showFavourite = action.val\r\n            return state;\r\n        case ADD_TO_MOVIES:\r\n            var ck = true;\r\n            state.list.forEach(obj=>{\r\n                if(obj.Title===action.movie.Title){\r\n                    ck = false;\r\n                }\r\n            })\r\n            if(ck){\r\n                state.list.push(action.movie)\r\n            }\r\n            localStorage.setItem('state', JSON.stringify(state))\r\n            return state;\r\n        case ADD_LOCAL_STORAGE:\r\n            state = JSON.parse(localStorage.getItem('state'))\r\n            state.showFavourite=false;\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialSearchState = {\r\n    result: {},\r\n    showResult: false\r\n}\r\n\r\nexport function addSearchResult (state = initialSearchState, action){\r\n    switch(action.type){\r\n        case ADD_SEARCH_RESULT:\r\n            state.showResult=true\r\n            state.result=action.movies\r\n            //console.log(action.movies)\r\n            return state\r\n        case CLEAR_SEARCH:\r\n            state.showResult=false\r\n            state.result=[]\r\n            //console.log(action.movies)\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    movies: initialMoviesState,\r\n    results: initialSearchState\r\n}\r\n\r\n// export default function rootReducer(state = initialState, action){\r\n//     return {\r\n//         movies: movies(state.movies, action),\r\n//         result: search(state.result, action)\r\n//     }\r\n// }\r\n\r\nexport default combineReducers({\r\n    movies,    //movies: movies\r\n    addSearchResult\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './components/App';\nimport rootReducer from './reducers';\n\n// const logger = function({dispatch, getState}){\n//   return function(next){\n//     return function(action){\n//       console.log(action.type)\n//       next(action)\n//     }\n//   }\n// }\n\n// const logger = ({dispatch, getState})=>(next)=>(action)=>{\n//   console.log(action.type)\n//   next(action)\n// }\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n//console.log(store);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App store={store}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}